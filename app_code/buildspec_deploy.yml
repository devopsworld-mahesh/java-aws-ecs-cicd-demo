version: 0.2
phases:
  install: # Install AWS cli
    on-failure: ABORT
    commands:
       - apt-get update
       - apt-get install -y git python3 python3-pip jq
       - pip install awscli

  pre_build: # Check if cloudformation stack are listed.
    #on-failure: ABORT
    commands:
      - export STACK_EXISTS=`aws cloudformation list-stacks --stack-status-filter CREATE_COMPLETE | jq -r .StackSummaries[].StackName | grep $STACK_NAME`

  build: # Deploy app via CFT
    on-failure: ABORT
    commands:
      - | 
        if [ -z $STACK_EXISTS ] ; then 
          aws cloudformation create-stack --stack-name $STACK_NAME --template-body file://cf_templates/ecs_fargate_app_deploy.yml --parameters ParameterKey=VPC,ParameterValue=$VPC ParameterKey=SubnetA,ParameterValue=$SubnetA ParameterKey=SubnetB,ParameterValue=$SubnetB ParameterKey=Image,ParameterValue=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION ParameterKey=ServiceName,ParameterValue=$ServiceName ParameterKey=ContainerPort,ParameterValue=$ContainerPort ParameterKey=LoadBalancerPort,ParameterValue=$LoadBalancerPort ParameterKey=HealthCheckPath,ParameterValue=$HealthCheckPath ParameterKey=MinContainers,ParameterValue=$MinContainers ParameterKey=MaxContainers,ParameterValue=$MaxContainers ParameterKey=AutoScalingTargetValue,ParameterValue=$AutoScalingTargetValue --capabilities CAPABILITY_NAMED_IAM
        else
          aws cloudformation update-stack --stack-name $STACK_NAME --template-body file://cf_templates/ecs_fargate_app_deploy.yml --parameters ParameterKey=VPC,ParameterValue=$VPC ParameterKey=SubnetA,ParameterValue=$SubnetA ParameterKey=SubnetB,ParameterValue=$SubnetB ParameterKey=Image,ParameterValue=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION ParameterKey=ServiceName,ParameterValue=$ServiceName ParameterKey=ContainerPort,ParameterValue=$ContainerPort ParameterKey=LoadBalancerPort,ParameterValue=$LoadBalancerPort ParameterKey=HealthCheckPath,ParameterValue=$HealthCheckPath ParameterKey=MinContainers,ParameterValue=$MinContainers ParameterKey=MaxContainers,ParameterValue=$MaxContainers ParameterKey=AutoScalingTargetValue,ParameterValue=$AutoScalingTargetValue --capabilities CAPABILITY_NAMED_IAM
        fi

  post_build: # Check CFT status
    on-failure: ABORT
    commands:
      - bash -c "if [ /"$CODEBUILD_BUILD_SUCCEEDING/" == /"0/" ]; then exit 1; fi"
      - sleep 60
      - echo -e "\nCheck CFT Stack Status for more details"
      - export STACK_STATUS=`aws cloudformation describe-stacks --stack-name $STACK_NAME | jq -r .Stacks[].StackStatus`
      - |
        if [ $STACK_STATUS = "ROLLBACK_IN_PROGRESS" ] || [ $STACK_STATUS = "ROLLBACK_COMPLETE" ] || [ $STACK_STATUS = "ROLLBACK_FAILED" ] ; then
          exit 1
        fi
