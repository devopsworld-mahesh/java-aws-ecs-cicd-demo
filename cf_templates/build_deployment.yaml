---
AWSTemplateFormatVersion: 2010-09-09

Description: CFN Template to deploy CodePipeline to build Docker Image of java application and push to ECR and deploy to EKS

Parameters:
  AppVPC:
    Type: AWS::EC2::VPC::Id
  AppSubnetA:
    Type: AWS::EC2::Subnet::Id
  AppSubnetB:
    Type: AWS::EC2::Subnet::Id
  AppServiceName:
    Type: String
    Default: MyJavaAppService
  AppContainerPort:
    Type: Number
    Default: 8080
  AppLoadBalancerPort:
    Type: Number
    Default: 80
  AppHealthCheckPath:
    Type: String
    Default: /hello
    # for autoscaling
  AppMinContainers:
    Type: Number
    Default: 2
    # for autoscaling
  AppMaxContainers:
    Type: Number
    Default: 10
    # target CPU utilization (%)
  AppAutoScalingTargetValue:
    Type: Number
    Default: 50
  CodeBranchName:
    Type: String
    Default: master
  EnvType:
    Type: String
  EcrDockerRepository:
    Type: String
  SonarCloudToken:
    Type: String
    NoEcho: 'True'
  SonarProjectKey:
    Type: String
    NoEcho: 'True'
  GithubConnectionArn:
    Type: String
    NoEcho: 'True'
  GithubRepoId:
    Type: String


Resources:

  CodePipelineArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: CodePipelineServiceRole-${AWS::StackName}
      Path: /service-role/
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: codepipeline-access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - codebuild:BatchGetBuildBatches
                  - codebuild:StartBuildBatch
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetRepository
                  - codecommit:UploadArchive
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:CancelUploadArchive
                  - ecr:DescribeImages
                  - iam:PassRole
                  - iam:GetRole
                  - cloudformation:*
                  - ec2:*
                  - elasticloadbalancing:*
                  - ecs:*
                  - autoscaling:*
              - Resource: !Sub arn:aws:s3:::${CodePipelineArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: !Ref GithubConnectionArn
                Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                  - codestar-connections:GetConnection
                  - codestar-connections:ListConnections
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:PutObjectAcl
    DependsOn: CodePipelineArtifactBucket

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: CodeBuildServiceRole-${AWS::StackName}
      Path: /service-role/
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: codebuild-access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: '*'
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - codecommit:GitPull
                  - ssm:GetParameters
              - Resource: '*'
                Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - iam:PassRole
                  - cloudformation:*
                  - ec2:*
                  - iam:GetRole
                  - iam:CreateRole
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                  - elasticloadbalancing:*
                  - ecs:*
                  - autoscaling:*
                  - application-autoscaling:*
                  - cloudwatch:DescribeAlarms
                  - cloudwatch:PutMetricAlarm
              - Resource: !Sub arn:aws:s3:::${CodePipelineArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
              - Resource: !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${EcrDockerRepository}
                Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
              - Resource: !Ref GithubConnectionArn
                Effect: Allow
                Action:
                  - codestar-connections:UseConnection

  StaticCodeAnalysis:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: "app_code/buildspec_codeanalysis.yml"
      TimeoutInMinutes: 30
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:4.0"
        PrivilegedMode: True
        EnvironmentVariables:
          - Name: SONAR_TOKEN
            Type: PARAMETER_STORE
            Value: !Ref SonarCloudToken
          - Name: SONAR_PROJECT_KEY
            Type: PARAMETER_STORE
            Value: !Ref SonarProjectKey
      Name:
        Fn::Sub: CodeAnalysis-${AWS::StackName}
      ServiceRole:
        Fn::GetAtt: [ CodeBuildServiceRole, Arn ]

  CodeBuildImageProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: "app_code/buildspec.yml"
      TimeoutInMinutes: 30
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:4.0"
        PrivilegedMode: True
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: IMAGE_REPO_NAME
            Value: !Ref EcrDockerRepository
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
      Name: 
        Fn::Sub: Build-${AWS::StackName}
      ServiceRole:
        Fn::GetAtt: [ CodeBuildServiceRole, Arn ]

  CodeDeployImageProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: "app_code/buildspec_deploy.yml"
      TimeoutInMinutes: 30
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:4.0"
        PrivilegedMode: True
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: IMAGE_REPO_NAME
            Value: !Ref EcrDockerRepository
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: STACK_NAME
            Value: java-fargate-demo-app
          - Name: VPC
            Value: !Ref AppVPC
          - Name: SubnetA
            Value: !Ref AppSubnetA
          - Name: SubnetB
            Value: !Ref AppSubnetB
          - Name: ServiceName
            Value: !Ref AppServiceName
          - Name: ContainerPort
            Value: !Ref AppContainerPort
          - Name: LoadBalancerPort
            Value: !Ref AppLoadBalancerPort
          - Name: HealthCheckPath
            Value: !Ref AppHealthCheckPath
          - Name: MinContainers
            Value: !Ref AppMinContainers
          - Name: MaxContainers
            Value: !Ref AppMaxContainers
          - Name: AutoScalingTargetValue
            Value: !Ref AppAutoScalingTargetValue
          - Name: ENV
            Value: !Ref EnvType
      Name:
        Fn::Sub: Deploy-${AWS::StackName}
      ServiceRole:
        Fn::GetAtt: [ CodeBuildServiceRole, Arn ]

  MyGithubCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name:
        Fn::Sub: Pipeline-${AWS::StackName}
      RoleArn:
          Fn::GetAtt: [ CodePipelineServiceRole, Arn ]
      ArtifactStore:
        Type: S3
        Location: !Sub ${CodePipelineArtifactBucket} 
      Stages:
        - Name: Source
          Actions:
            - Name: App
              Namespace: "SourceVariables"
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: !Ref GithubConnectionArn
                BranchName: !Ref CodeBranchName
                DetectChanges: 'true'
                FullRepositoryId: !Ref GithubRepoId
                OutputArtifactFormat: "CODEBUILD_CLONE_REF"
              OutputArtifacts:
                - Name: SourceCodeApp
              RunOrder: 1
        - Name: Review-Code-Analysis
          Actions:
              - Name: CodeAnalysis
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: 1
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Ref StaticCodeAnalysis
                InputArtifacts:
                  - Name: SourceCodeApp
                OutputArtifacts:
                  - Name: CodeAnalysisOutput
                RunOrder: 2
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildImageProject
              InputArtifacts:
                - Name: SourceCodeApp
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 3
        - Name: ApprovalToDeploy
          Actions:
            - Name: Approval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              Configuration:
                CustomData: Approval or Reject the build to be deployed on Fargate
              InputArtifacts: []
              OutputArtifacts: []
              RunOrder: 4
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeDeployImageProject
              InputArtifacts:
                - Name: SourceCodeApp
              OutputArtifacts:
                - Name: DeployOutput
              RunOrder: 5
    DependsOn: [ "CodeBuildImageProject", "CodeDeployImageProject", "StaticCodeAnalysis" ]

Outputs:
  CodeBuildServiceRoleARN:
    Value: !GetAtt CodeBuildServiceRole.Arn
